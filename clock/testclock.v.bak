module stopwatch_01(clk,key_reset,key_start_pasue,key_display_stop,hex0,hex1,hex2,hex3,hex4,hex5,hex6,hex7,led0,led1,led2,led3);
	input		clk,key_reset,key_start_pasue,key_display_stop;
	output [6:0]	hex0,hex1,hex2,hex3,hex4,hex5,hex6,hex7;
	output	led0,led1,led2,led3
	reg	display_work;
	reg	counter_work;
	parameter	DELAY_TIME=10000000;
	
	reg	[3:0]	hour_display_high;
	reg	[3:0]	hour_display_low;
	reg	[3:0]	minute_display_high;
	reg	[3:0]	minute_display_low;
	reg	[3:0]	second_display_high;
	reg	[3:0]	second_display_low;
	reg	[3:0]	msecond_display_high;
	reg	[3:0]	msceond_display_low;

	reg	[3:0]	hour_counter_high;
	reg	[3:0]	hour_counter_low;
	reg	[3:0]	minute_counter_high;
	reg	[3:0]	minute_counter_low;
	reg	[3:0]	second_counter_high;
	reg	[3:0]	second_counter_low;
	reg	[3:0]	msecond_counter_high;
	reg	[3:0]	msceond_counter_low;
	
	reg	start;
	reg	display;
	reg	[31:0]counter;
	reg	cnt;
	
	sevenseg	led_hour_display_high(hour_display_high,hex0);
	sevenseg	led_hour_display_low(hour_display_low,hex1);
	sevenseg	led_minute_display_high(minute_display_high,hex2);
	sevenseg	led_minute_display_low(minute_display_low,hex3);
	sevenseg	led_second_display_high(second_display_high,hex4);
	sevenseg	led_second_display_low(second_display_low,hex5);
	sevenseg	led_msecond_display_high(msecond_display_high,hex6);
	sevenseg	led_msecond_display_low(msecond_display_low,hex7);
	
	always@(posedge clk)
		begin
			if(counter==100000)
				begin
				counter<=0;
				cnt=1;
				end
			else
				counter<=counter+1;
		end
		
endmodule

module sevenseg(data,ledsegments);
	input [3:0] data;
	output ledsegments;
	reg[6:0] ledsegments;
	
	always@(*)
		case(data)
			0:ledsegments=7'b100_0000;
			1:ledsegments=7'b111_1001;
			2:ledsegments=7'b010_0100;
			3:ledsegments=7'b011_0000;
			4:ledsegments=7'b001_1001;
			5:ledsegments=7'b001_0010;
			6:ledsegments=7'b000_0010;
			7:ledsegments=7'b111_1000;
			8:ledsegments=7'b000_0000;
			9:ledsegments=7'b001_0000;
		default:ledsegments=7'b111_1111;
endmodule